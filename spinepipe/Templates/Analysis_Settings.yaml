Parameters:
    input_resXY: 0.102 #raw data resolution
    input_resZ: 1 #raw data resolution
   
Analysis:
    tiles_for_prediction: (2,2) #Setting used to break image into tiles for inference on GPU
    roi_volume_size: 16 #in microns in x, y, z - approx 50px for 0.3 resolution data
    GPU_block_size: (150,500,500) #dims used for processing images in block for cell extraction. Reduce if recieving out of memory errors
    
    save_intermediate_data:    True  #Store intermediate results such as raw csvs
    save_val_data: True    #Saves all validation data
    validation_format: tif #    else None
    validation_scale: (1,1) #output scaling for validation data e.g. (2,2) for half scale
    validation_jpeg_comp: 100    #100% quality default

    spine_roi_volume_size: 8 #in microns in x, y, z - For array extraction



Neuron:
    channel: 1
    restore: False # Restore image data first using image restoration model
    rest_model_path: None   #Path to restoration model"
    rest_type: ("care", 130)    #Type and backbone type if using tf models. If "care", follow by a threshold to remove low intensities and potential artifacts.
    
    seg_model_path:    "D:/Dropbox/Github/spine-analysis/spinepipe/Models/Dataset022_SpinesDendrites/"   #Path nnUnet Model"
    seg_model: ('nnUnet', '') # (model, network) 
    seg_model_step: (128,128,128) #128, or (64, 32, 32) to match model. Ignore if using nnUnet
    seg_model_res: (0.102,0.102, 1) # Resolution of image data model was trained on. Important for rescaling images of different resoltuion 
    
    prob_thresh: 0.05 # for binary Unet. Ignore if using nnUnet
    spine_size: (3,1500)    #min, max volume filter for filter spines
    intensity_filter: 0 #Filter out detected cells below this intensity from results



nnUnet:
    raw: D:\nnUnet\Raw
    preprocessed: D:\nnUnet\preprocessed
    results: D:\nnUnet\results
    type: 3d_fullres
    conda_path: C:/Users/Luke_H\Anaconda3
    env: spineanalysis


